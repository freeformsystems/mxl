.TH "MXL" "1" "July 2015" "mxl 0.6.5" "User Commands"
.SH "NAME"
mxl -- Tmux launcher.
.SH "USAGE"

.SP
mxl <command> [\-anrh] [\-a|\-\-all] [\-n|\-\-noop] [\-r|\-\-recursive]
.br
    [\-\-color|\-\-no\-color] [\-h|\-\-help] [\-\-version] [\-c|\-\-directory=<dir...>]
.br
    [\-p|\-\-pattern=<ptn...>] [\-s|\-\-session=<name>] <args>
.SH "DESCRIPTION"
.PP
Finds files named either \fBtmux.conf\fR or with a \fB.tmux.conf\fR extension and executes using \fBtmux source\-file\fR.
.PP
When no command is specified the \fBsource\fR command is invoked.
.PP
The \fB\-\-noop\fR option applies to all commands except \fBls\fR and \fBhelp\fR, in the case of operations on aliases the rc file is not written.
.PP
If the \fB$TMUX\fR variable is not set an attempt is made to spawn \fBtmux\fR to start an initial server, see \fIWORKFLOW\fR.
.SH "COMMANDS"
.BL
.IP "\[ci]" 4
\fBattach, att, a\fR: Attach to a session.
.IP "\[ci]" 4
\fBexec, ex\fR: Execute a command in a pane.
.IP "\[ci]" 4
\fBlist, ls\fR: List configuration files.
.IP "\[ci]" 4
\fBsource, so\fR: Source tmux configuration files.
.IP "\[ci]" 4
\fBalias, as\fR: Manage file aliases.
.IP "\[ci]" 4
\fBremove, rm\fR: Remove aliases by pattern match.
.IP "\[ci]" 4
\fBprune, pr\fR: Remove stale aliases.
.IP "\[ci]" 4
\fBindex, idx\fR: Generate alias index.
.IP "\[ci]" 4
\fBkill, k\fR: Kill sessions, windows and panes.
.IP "\[ci]" 4
\fBinstall, i\fR: Install alias files.
.IP "\[ci]" 4
\fBview, vi\fR: View and edit configuration files.
.IP "\[ci]" 4
\fBquit\fR: Kill the \fBtmux\fR server.
.IP "\[ci]" 4
\fBhelp\fR: Show help for commands.
.EL
.SH "OPTIONS"
.BL
.IP "\[ci]" 4
\fB\-c, \-\-directory=[dir ...]\fR: Working directory contexts.
.IP "\[ci]" 4
\fB\-p, \-\-pattern=[ptn ...]\fR: Filter files by regexp pattern(s).
.IP "\[ci]" 4
\fB\-a, \-\-all\fR: Match all configuration files.
.IP "\[ci]" 4
\fB\-n, \-\-noop\fR: Print matched files, do not call \fBsource\-file\fR.
.IP "\[ci]" 4
\fB\-s, \-\-session=[name]\fR: Create session before source file(s).
.IP "\[ci]" 4
\fB\-r, \-\-recursive\fR: Match files recursively.
.IP "\[ci]" 4
\fB\-h, \-\-help\fR: Print help and exit.
.IP "\[ci]" 4
\fB\-\-[no]\-color\fR: Enable or disable terminal colors.
.IP "\[ci]" 4
\fB\-\-version\fR: Print version and exit.
.EL
.SH "PATTERNS"
.PP
When the \fB\-p | \-\-pattern\fR option is specified it is applied to the results of searching for configuration files except in the case of \fB\-e | \-\-each\fR when the behaviour changes to match on the current working directory context, see mxl\-source(1) for more information on \fB\-\-each\fR.
.PP
Patterns are compiled to regular expressions and are matched against the full file system path.
.PP
If any of the patterns match the file is included (logical OR).
.SH "WORKFLOW"
.PP
Information on an efficient workflow, examples assume the \fBzsh\fR shell.
.PP
To remove the first few keystrokes for a session start \fBtmux\fR at login:

.SP
  if [ \-z $TMUX ]; then
.br
    tmux
.br
  fi
.PP
Once \fBmxl\fR is installed you have a lot of power to create many sessions and windows very quickly so it is useful to be able to also kill sessions, windows and panes when necessary. Save a few more keystrokes with the following aliases:

.SP
  # kill self (session, window, pane)
.br
  alias ks="mxl kill \-S"
.br
  alias kw="mxl kill \-W"
.br
  alias kp="mxl kill \-P"
.br
  # kill all others (session, window, pane)
.br
  alias kso="mxl kill \-S '.*'"
.br
  alias kwo="mxl kill \-W '@'"
.br
  alias kpo="mxl kill \-P '%'"
.br
  # reshuffle window indices
.br
  alias wrs="mxl rs"
.br
  # kill tmux server
.br
  alias tks="mxl quit"
.br
  # attach to scratch (zero args) or specific session
.br
  alias att="mxl attach"
.br
  # exec command in unfocused visible pane
.br
  alias mxe="mxl exec"
.br
  # exec command in fullscreen pane
.br
  alias mxf="mxl exec \-z"
.br
  # exec man(1) in fullscreen pane
.br
  alias mxm="mxl exec \-z man"
.PP
The concept of a \fBscratch\fR session exists as the default session and as the session to re\-attach to when killing the current session. Typically you would define this in \fB$HOME/tmux.conf\fR and configure the sessions, windows and panes you want for the \fBscratch\fR session.
.PP
The session name given to the scratch session is \fB/launch\fR by default but you may change this with the \fB$mxl_scratch\fR environment variable, but do not start the session name with \fB\-\fR.
.PP
A global alias is available with my preference named \fB@scratch\fR, install it:

  cd ~ && mxl i @scratch
.PP
And modify \fBtmux.conf\fR to suit your needs.
.PP
Once you have run the scratch session:

  mxl .
.PP
You will have a user alias named \fB@<username>\fR, eg: \fB@muji\fR; you can list user aliases with \fBmxl as\fR to check.
.PP
Now you can update your shell rc file to run \fBmxl\fR directly with the user profile:

.SP
  if [ \-z $TMUX ]; then
.br
    mxl @muji
.br
  fi
.PP
When \fB$TMUX\fR is not set \fBmxl\fR will attempt to spawn it to start a server, so the above command will spawn \fBtmux\fR, wait a while for the server to start and then execute the arguments.
.PP
Specify more aliases to source other files at login:

.SP
  if [ \-z $TMUX ]; then
.br
    mxl @binding @muji
.br
  fi
.PP
Note it is important to test that \fB$TMUX\fR is \fInot\fR set to prevent nested session attempts when splitting windows and panes.
.PP
When modifying the shell login rc file it is best to kill the server (\fB:kill\-server\fR) and terminal emulator and start fresh.
.SH "PREAMBLE"
.PP
Templates that operate on sessions or windows will include a preamble that tries to ensure the session or window starts with a clean execution. To do so it uses the \fBmxl_key\fR and \fBmxl_session\fR variables, you can hard code values here if you prefer but this helps to allow the file to be shared across projects easily.
.PP
Install the \fB@blank\fR template to create a file with just the preamble.
.SH "BINDING"
.PP
The \fB@binding\fR template is designed to be available as a map of key bindings useful to the default scratch session; attach to scratch, check email, pause music etc. Install and modify to match your requirements.
.SH "COMPLETION"
.PP
The zsh completion file \fB_mxl.zsh\fR is available in \fBcompletion\fR, copy the file to a directory in \fBfpath\fR or modify \fBfpath\fR.
.SH "ENVIRONMENT"
.PP
The variables declared in the \fBenv\fR section of rc file(s) are always exposed as global environment variables.
.PP
When a call to \fB:source\-file\fR is made additional file context environment variables are set, these variables are unset after each call, see mxl\-source(1) for information on context environment variables.
.PP
Exposed variables are always prefixed with \fBmxl_\fR, eg: \fBmxl_scratch\fR represents the name of the scratch session.
.PP
Global variables may be configured in the user rc file, for example:

.SP
  {
.br
    "env": {
.br
      "scratch": "/launch",
.br
      "mail": "mail",
.br
      "music": "music",
.br
      "irc": "irc"
.br
    }
.br
  }
.PP
Modify the session names to suit your needs, or override them with environment variables:

  export mxl_scratch=/scratch
.PP
The \fBmxl_editor\fR environment variable is used if already set otherwise \fBEDITOR\fR, if the \fBenv\fR section contains an \fBeditor\fR field it overrides the \fBmxl_editor\fR variable.
.PP
Use the \fBmxl_tpl\fR variable to set the base path that should be used for files that source other files, by default this is configured to be the installation template directory (\fBconf/tpl\fR) and is used to ensure that files may source other files correctly when templates are installed as a symbolic link.
.SH "BUGS"
.PP
Report bugs to https://github.com/freeformsystems/mxl/issues.
.SH "SEE ALSO"
.PP
tmux(1), mxl\-alias(1), mxl\-attach(1), mxl\-exec(1), mxl\-index(1), mxl\-install(1), mxl\-kill(1), mxl\-list(1), mxl\-prune(1), mxl\-quit(1), mxl\-remove(1), mxl\-source(1), mxl\-view(1)
